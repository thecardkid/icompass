#!/usr/bin/env bash
set -euo pipefail
. "$(dirname "${BASH_SOURCE[0]}")/lib/common.sh"

base_branch=master
curr_branch="$(git branch | grep \* | cut -d ' ' -f2)"
if [[ "$curr_branch" == "$base_branch" ]]; then
    echo "Need to be on feature branch to merge" >&2
    exit 1
fi

echo "rebasing the $curr_branch onto $base_branch.." >&2
git rebase "$base_branch"

commit_messages="$(git log --format=%B --reverse ${base_branch}..${curr_branch})"

cat <<EOF >&2


about to squash merge branch "$curr_branch" into "$base_branch" with the following commit message:

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Merge branch "$curr_branch"

$commit_messages
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



EOF

read -p "Continue? [y/N] " input >&2
if [[ $input != "y" && $input != "Y" ]]; then
    echo "aborting" >&2
    exit 1
fi

# check branch is not dirty
status="$(git status -s)"
if [[ ! -z "$status" ]]; then
    echo "aborting, git branch is dirty" >&2
    exit 1
fi

echo "committing..." >&2
git checkout "$base_branch"
git merge --squash "$curr_branch"
git commit -m "Merge branch \"$curr_branch\"" -m "$commit_messages"
git branch -D "$curr_branch"

remote_exists="$(git ls-remote --heads git@github.com:thecardkid/icompass.git $curr_branch)"
if [[ ! -z "$remote_exists" ]]; then
    git push origin --delete "$curr_branch"
fi

git status
